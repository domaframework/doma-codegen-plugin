package example.dao

import java.sql.Connection
import java.sql.Driver
import java.sql.DriverManager
import java.sql.Statement

import org.junit.jupiter.api.BeforeEach
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.TestInfo

import org.seasar.doma.jdbc.NoCacheSqlFileRepository
import org.seasar.doma.jdbc.SqlFile
import org.seasar.doma.jdbc.SqlFileRepository
import org.seasar.doma.jdbc.dialect.Dialect

/**
 * 
 */
class SqlTest {

    lateinit var repository: SqlFileRepository
    lateinit var dialect: Dialect
    lateinit var driver: Driver
    lateinit var url: String
    lateinit var user: String
    lateinit var password: String

    @BeforeEach
    protected fun setUp() {
        repository = NoCacheSqlFileRepository()
        dialect = org.seasar.doma.jdbc.dialect.StandardDialect()
        url = "jdbc:hsqldb:mem:example"
        user = "sa"
        password = ""
    }

    protected fun execute(sqlFile: SqlFile) {
        val connection = getConnection()
        try {
            connection.setAutoCommit(false)
            val statement = connection.createStatement()
            try {
                statement.execute(sqlFile.getSql())
            } finally {
                statement.close()
            }
        } finally {
            try {
                connection.rollback()
            } finally {
                connection.close()
            }
        }
    }

    protected fun getConnection(): Connection {
        return DriverManager.getConnection(url, user, password)
    }

    @Test
    public fun testSelect(testInfo: TestInfo) {
        val sqlFile = repository.getSqlFile(testInfo.getTestMethod().get(), "META-INF/org/seasar/doma/gradle/codegen/KotlinGeneratorTest/select.sql", dialect)
        execute(sqlFile)
    }

    @Test
    public fun testInsert(testInfo: TestInfo) {
        val sqlFile = repository.getSqlFile(testInfo.getTestMethod().get(), "META-INF/org/seasar/doma/gradle/codegen/KotlinGeneratorTest/insert.sql", dialect)
        execute(sqlFile)
    }

    @Test
    public fun testUpdate(testInfo: TestInfo) {
        val sqlFile = repository.getSqlFile(testInfo.getTestMethod().get(), "META-INF/org/seasar/doma/gradle/codegen/KotlinGeneratorTest/update.sql", dialect)
        execute(sqlFile)
    }

}