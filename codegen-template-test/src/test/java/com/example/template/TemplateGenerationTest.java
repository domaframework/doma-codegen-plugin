package com.example.template;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import com.example.template.dao.DepartmentDao;
import com.example.template.entity.Department;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.stream.Collectors;
import org.junit.jupiter.api.Test;

class TemplateGenerationTest {

  @Test
  void testEntityWasGenerated() {
    // Verify that entities were generated
    assertNotNull(Department.class);
    assertEquals("com.example.template.entity.Department", Department.class.getName());
  }

  @Test
  void testDaoWasGenerated() {
    // Verify that DAOs were generated
    assertNotNull(DepartmentDao.class);
    assertEquals("com.example.template.dao.DepartmentDao", DepartmentDao.class.getName());
    assertTrue(DepartmentDao.class.isInterface());
  }

  @Test
  void testGeneratedFilesHaveCustomHeader() throws IOException {
    // Check that generated files contain the custom header from our templates
    Path entityPath = Paths.get("src/main/java/com/example/template/entity/Department.java");

    if (Files.exists(entityPath)) {
      List<String> lines = Files.readAllLines(entityPath);
      String content = lines.stream().collect(Collectors.joining("\n"));

      // Check for the custom header
      assertTrue(content.contains("This file was generated by Doma-CodeGen with custom templates"));
      assertTrue(content.contains("Template Test Project"));
      assertTrue(content.contains("Generated at:"));
    }
  }

  @Test
  void testSqlFilesWereGenerated() {
    // Check that SQL files were generated
    Path sqlPath =
        Paths.get(
            "src/main/resources/META-INF/com/example/template/dao/DepartmentDao/selectById.sql");
    assertTrue(Files.exists(sqlPath));
  }

  @Test
  void testTemplateDirectoryConfiguration() {
    // This test verifies that the template directory was correctly configured
    // The actual template application is verified by checking the generated file headers
    Path templateDir = Paths.get("src/main/resources/custom-templates");
    assertTrue(Files.exists(templateDir));
    assertTrue(Files.isDirectory(templateDir));
  }
}
