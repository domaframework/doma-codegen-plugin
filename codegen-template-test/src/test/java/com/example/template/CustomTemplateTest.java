package com.example.template;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import com.example.template.dao.DepartmentDao;
import com.example.template.entity.Department;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import org.junit.jupiter.api.Test;

class CustomTemplateTest {

  @Test
  void testEntityGeneration() throws Exception {
    Class<?> deptClass = Department.class;
    assertNotNull(deptClass);
    // Check for custom methods
    assertNotNull(deptClass.getDeclaredMethod("getEntityName"));
    // Check that it implements Serializable (from custom template)
    assertTrue(java.io.Serializable.class.isAssignableFrom(deptClass));
  }

  @Test
  void testDaoGeneration() throws Exception {
    Class<?> deptDaoClass = DepartmentDao.class;
    assertNotNull(deptDaoClass);
    // Check for custom methods
    assertNotNull(deptDaoClass.getDeclaredMethod("insertMulti", List.class));
  }

  @Test
  void testGeneratedSourceContainsCustomComment() throws IOException {
    // Check that generated files contain custom template markers
    Path entityPath = Paths.get("src/main/java/com/example/template/entity/Department.java");

    if (Files.exists(entityPath)) {
      List<String> lines = Files.readAllLines(entityPath);
      String content = String.join("\n", lines);

      // Check for a custom comment in the header
      assertTrue(content.contains("This file was generated by Doma-CodeGen with custom templates."));
    }
  }
}
